dynmx_signature:
  meta:
    name: direct_injection
    title: Direct Injection
    description: Detection of direct code injection malware feature
    author: "0x534a"
    version: 1.0
    mitre_att&ck: "T1055"
    references:
      - https://attack.mitre.org/techniques/T1055/
      - https://www.fortinet.com/blog/threat-research/remcos-a-new-rat-in-the-wild-2
    samples:
      - 8490daab736aa638b500b27c962a8250bbb8615ae1c68ef77494875ac9d2ada2
      - 392f8e0c5fd005324b6f7d67b6389f58b6c2e54122b78e273300eeb331a17fde
  detection:
    direct_injection:
      # Get process handle or create a new process
      - variant:
        - path:
          - api_call: "OpenProcess"
            with:
              - return_value: "return"
                operation: "is not"
                value: 0
            store:
              - name: "return"
                as: "proc_handle"
        - path:
          - api_call: ["CreateProcess[AW]", "CreateProcessInternal[AW]"]
            with:
              - return_value: "return"
                operation: "is not"
                value: 0
            store:
              - name: "hProcess"
                as: "proc_handle"
      # Allocate memory in process with RWX permissions
      - api_call: ["VirtualAllocEx", "VirtualAlloc", "(Nt|Zw)AllocateVirtualMemory"]
        with:
          - argument: "hProcess"
            operation: "is"
            value: "$(proc_handle)"
          - argument: ["flProtect", "Protect"]
            operation: "is"
            value: 0x40
      # Injection of malicious code to remote process
      - api_call: ["WriteProcessMemory", "(Nt|Zw)WriteVirtualMemory"]
        with:
          - argument: ["hProcess", "ProcessHandle"]
            operation: "is"
            value: "$(proc_handle)"
      # Create thread in remote process to execute injected code
      - api_call: "CreateRemoteThread"
        with:
          - argument: "hProcess"
            operation: "is"
            value: "$(proc_handle)"
  condition: direct_injection as sequence
